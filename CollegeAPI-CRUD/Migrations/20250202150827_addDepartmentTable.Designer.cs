// <auto-generated />
using System;
using CollegeAPI_CRUD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CollegeAPI_CRUD.Migrations
{
    [DbContext(typeof(CollegeDbContext))]
    [Migration("20250202150827_addDepartmentTable")]
    partial class addDepartmentTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CollegeAPI_CRUD.Data.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EstablishedYear")
                        .HasColumnType("int");

                    b.Property<int>("TotalFaculty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TotalStudents")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "ECE",
                            DepartmentName = "Electronic & Communication",
                            Description = "Deals with electronic devices, circuits, and communication systems",
                            EstablishedYear = 1995,
                            TotalFaculty = 25,
                            TotalStudents = 450
                        },
                        new
                        {
                            Id = 2,
                            Code = "CSE",
                            DepartmentName = "Computer Science & Engineering",
                            Description = "Focuses on computing, programming, and software development",
                            EstablishedYear = 2000,
                            TotalFaculty = 30,
                            TotalStudents = 600
                        },
                        new
                        {
                            Id = 3,
                            Code = "ME",
                            DepartmentName = "Mechanical Engineering",
                            Description = "Covers machine design, manufacturing, and automation",
                            EstablishedYear = 1985,
                            TotalFaculty = 20,
                            TotalStudents = 400
                        },
                        new
                        {
                            Id = 4,
                            Code = "CE",
                            DepartmentName = "Civil Engineering",
                            Description = "Involves construction, design, and infrastructure development",
                            EstablishedYear = 1980,
                            TotalFaculty = 22,
                            TotalStudents = 350
                        },
                        new
                        {
                            Id = 5,
                            Code = "EE",
                            DepartmentName = "Electrical Engineering",
                            Description = "Deals with electrical systems, power generation, and electronics",
                            EstablishedYear = 1990,
                            TotalFaculty = 24,
                            TotalStudents = 420
                        });
                });

            modelBuilder.Entity("CollegeAPI_CRUD.Data.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Gujarat,India",
                            DOB = new DateTime(2001, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Aarav@gmail.in",
                            Name = "Aarav"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Melbourne,Australia",
                            DOB = new DateTime(2002, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Bishops@gmail.com",
                            Name = "Bishops"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Maharashtra,India",
                            DOB = new DateTime(2001, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Chirag@gmail.in",
                            Name = "Chirag"
                        });
                });

            modelBuilder.Entity("CollegeAPI_CRUD.Data.Student", b =>
                {
                    b.HasOne("CollegeAPI_CRUD.Data.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Students_Departments");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CollegeAPI_CRUD.Data.Department", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
